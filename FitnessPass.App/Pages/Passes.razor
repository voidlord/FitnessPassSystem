@page "/passes"

@inject ClientPassService clientPassService
@inject PassTypeService passTypeService

<h3>Passes</h3>

<div class="form-group">
    <label for="name">Search based on: </label>
    <select id="searchOption" @bind="searchOption">
        <option value=1>Client name</option>
        <option value=2>Bar code</option>
    </select>
    <input type="text" class="form-control" id="name" @bind="@searchQuery">
    <button class="btn btn-primary" @onclick="Search">Search</button>
</div>
<div class="form-group">
    <br>
    <label for="passTypeId">Pass types</label>
    <br>
    <select id="passTypeId" @bind="passTypeId">
        @if (passTypes != null)
        {
            @foreach (var passType in passTypes)
            {
                <option value="@passType.PassTypeId">@passType.Name</option>
            }
        }
        else
        {
            <option value=0>No pass type</option>
        }
    </select>
    <br>
    <label for="status">Status</label>
    <br>
    <select id="status" @bind="passStatus">
        <option value=@false>Active</option>
        <option value=@true>Inactive</option>
    </select>
    <br>
    <button class="btn btn-primary" @onclick="Filter">Filter</button>
</div>

@if (passes == null || passes.Count == 0)
{
    <br>
    <br>
    <p>No results</p>
}

@if (passes != null && passes.Count != 0)
{
    <br>
    <table class="table">
        <thead>
            <tr>
                <th>Client name</th>
                <th>Barcode</th>
                <th>Pass type</th>
                <th>Date</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var pass in passes)
            {
                <tr>
                    <td>@pass.Client.Name</td>
                    <td>@pass.Client.BarCode</td>
                    <td>@pass.PassType.Name</td>
                    <td>@pass.CreatedOn</td>
                    @if (pass.Valid)
                    {
                        <td>Active</td>
                    }
                    else
                    {
                        <td>Inactive</td>
                    }
                </tr>
            }
        </tbody>
    </table>
}

@code {
    List<Model.ClientPass> passes;
    List<PassType> passTypes;
    string searchQuery;
    int searchOption = 1;
    int passTypeId = 1;
    bool passStatus;

    void Search()
    {
        if (String.IsNullOrWhiteSpace(searchQuery))
        {
            passes = clientPassService.GetPasses();
        }
        else
        {
            passes = searchOption switch
            {
                1 => clientPassService.GetPassesByName(searchQuery),
                2 => clientPassService.GetPassesByBarCode(searchQuery)
            };
        }
    }

    void Filter()
    {
        passes = passes.Where(x => x.PassTypeId == passTypeId && x.Valid == passStatus).ToList();
    }

    protected override async Task OnInitializedAsync()
    {
        Search();
        passTypes = passTypeService.GetPassTypes();
    }
}