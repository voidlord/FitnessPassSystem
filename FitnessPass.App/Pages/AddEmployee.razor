@page "/employees/add"

@inject NavigationManager navigationManager
@inject UserService userService

<nav>
    <ul class="nav nav-pills">
        <li class="nav-item">
            <a class="nav-link" href="/employees">Employees</a>
        </li>
    </ul>
</nav>

<h3>Add Employee</h3>

@if (errorMessages != null && errorMessages.Count != 0)
{
    <div class="alert alert-danger">
        @foreach (var error in errorMessages)
        {
            <p>@error</p>
        }
    </div>
    <br>
}

<form onsubmit="@AddNewUser">
    <div class="form-group">
        <label for="name">Name</label>
        <input type="text" class="form-control" id="name" @bind="@user.Name">
    </div>
    <div class="form-group">
        <label for="email">Email</label>
        <input type="email" class="form-control" id="email" @bind="@user.Email">
    </div>
    <div class="form-group">
        <label for="password">Password</label>
        <input type="password" class="form-control" id="password" @bind="@user.Password">
    </div>
    <div class="form-group">
        <label for="isAdmin">Status:</label>
        <div>
            <input type="radio" id="isAdmin" @bind="@user.IsAdmin" />
            <label for="isAdmin">Admin</label>
        </div>
    </div>
    <br>
    <button type="submit" class="btn btn-primary" @onclick="AddNewUser">Add</button>
</form>

@code {
    User user = new User();
    List<string> errorMessages;

    async Task AddNewUser()
    {
        if (!ValidateForm())
        {
            return;
        }

        userService.AddUser(user);

        user = new User();
    }

    bool ValidateForm()
    {
        errorMessages = new List<string>();

        if (String.IsNullOrEmpty(user.Name) || !Regex.IsMatch(user.Name, "^([A-Z][a-z]+[ -])*[A-Z][a-z]+$"))
        {
            errorMessages.Add("Name is not given or invalid.");
        }

        if (String.IsNullOrEmpty(user.Email) || !Regex.IsMatch(user.Email, "^([A-Za-z0-9.-])+[@][A-Za-z]+[.][a-z]+$"))
        {
            errorMessages.Add("Email is not given or invalid.");
        }

        if (String.IsNullOrEmpty(user.Password))
        {
            errorMessages.Add("Password is not given.");
        }

        if (errorMessages.Count != 0)
        {
            return false;
        }

        return true;
    }
}
