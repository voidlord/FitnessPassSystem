@inject NavigationManager NavigationManager

@code {
    [Inject]
    private AuthenticationStateProvider AuthStateProvider { get; set; }

    protected override async Task OnInitializedAsync() {
        var customAuthStateProvider = (Auth.CustomAuthenticationStateProvider)AuthStateProvider;
        var authState = await customAuthStateProvider.GetAuthenticationStateAsync();

        if (authState?.User?.Identity == null || !authState.User.Identity.IsAuthenticated) {
            var returnUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
            if (string.IsNullOrEmpty(returnUrl)) {
                NavigationManager.NavigateTo("/login", true);
            } else {
                NavigationManager.NavigateTo($"/login?returnUrl={returnUrl}", true);
            }
        }
    }
}
